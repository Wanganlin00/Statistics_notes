# 非参数检验

## 秩

$$
F(Median)=P(X\le Median)=0.5
$$

```{r}
x <- c(1,4,2,2,6,9,5)
rank(x)
```

## 二项分布B(n，0.5)

```{r warning=FALSE}
tibble(
    x = -5:15,
    y_binom = dbinom(x, size = 10,prob = 0.5),
) %>% 
ggplot()+
    geom_col(aes(x=x,y=y_binom,color="binomal Distribution"),fill=NA)+
    geom_function(mapping = aes(color="normal Distribution"),
                  fun = dnorm, args = list(mean = 5, sd = 1),
                   )+
    scale_color_manual(values = c("normal Distribution" = "red",
                                  "binomal Distribution" = "blue"))+
    labs(color = "Distribution")
```

## 单样本 Wilcoxon Signed-Rank exact test

如果样本数据没有通过正态分布检验就要采用单样本wilcoxon符号秩检验进行计算。使用该检验需要满足的条件是样本值均匀地分布在均值两侧。

```{r}
set.seed(123)
x <- runif(n = 100,min = 6,max = 8)
hist(x)
shapiro.test(x)
wilcox.test(x, mu=7) 
```

## 双样本

### 配对 Wilcoxon's signed-rank test

$$
T_++T_-=\frac{n(n+1)}{2},n为非零配对差值的数量
$$

$$
T=min{(T_+,T_-)}
$$

5 ≤ n ≤30，附表T~0~

n＞16，正态近似法

```{r}

df <- tibble(
    low=c(958.5,838.4,612.2,812.9,739.0,899.4,758.5,695.0,749.7,815.5),
    high=c(958.5,866.5,788.9,815.2,783.2,910.9,760.8,870.8,862.3,799.9),
)

shapiro.test(df$high-df$low)

# 忽略  差异绝对值为“0”的数剔除；
wilcox.test(df$low[-1],df$high[-1],exact = T,paired = T)


```

### 独立 Wilcoxon's Rank-Sum 检验 (Mann-Whitney U 检验)

当两个样本不满足正态分布时，使用Wilcoxon秩和检验进行非参数检验

用于比较两个独立样本的中位数是否相等。

$$
Wilxoxon秩和\ T=min\{T_1,T_2\}
$$

```{r}
MVR = c(38, 29, 35, 33, 38, 41, 31)
MVP = c(32, 43, 44, 81, 35, 46, 37, 45, 44)
shapiro.test(c(MVR,MVP))

combined_data <- c(MVR, MVP)
ranked_data <- rank(combined_data)
ranked_data 

MVR_ranks <- ranked_data[1:length(MVR)]
MVP_ranks <- ranked_data[(length(MVR)+1):length(combined_data)]

T1 <- sum(MVR_ranks)
T2 <- sum(MVP_ranks)

T1-length(MVR)*(length(MVR)+1)/2
wilcox.test(MVR,MVP,exact = F,correct = F)
```

#### W统计量

n1\<10,n2-n1\<10，附录

n1\>10,n2\>10，正态近似法

```{r}
x <- c(17, 12, 13, 16, 9, 19, 21, 12, 18, 17)
y <- c(10, 6, 15, 9, 8, 11, 8, 16, 13, 7, 5, 14)
wilcox.test(x, y, correct = F)

rank(c(x,y))[1:10] %>% sum()
rank(c(x,y))[11:22] %>% sum()

156.5-10*11/2

a <- wilcox.test(x,y,correct=FALSE)
str(a) 
n1 <- length(x)
a$statistic <- a$statistic + n1*(n1+1)/2
names(a$statistic) <- "T.W"
a
```

#### 曼-惠特尼 U 统计量

$$
曼-惠特尼U统计量= 威尔科克森W(较小秩和)-\frac{n_{T_{min}}(n_{T_{min}}+1)}{2}
$$

#### Z 统计量 coin::wilcox_test()

```{r}
library(coin)
df <- read_excel("data/coin：：wilcox_test .xlsx") %>% mutate(group=as.factor(group))
df

rank <- rank(df$HADS得分)

g1rankSum <- sum(rank[1:120])
g2rankSum <- sum(rank[121:240])


SPSS_威尔科克森W <- min(g1rankSum,g2rankSum)
SPSS_威尔科克森W 
SPSS_曼惠特尼U <-  SPSS_威尔科克森W -120*121/2
SPSS_曼惠特尼U

wilcox.test(HADS得分 ~ group,data=df,correct=F)
# SPSS  z统计量
coin::wilcox_test( HADS得分 ~ group,data=df, distribution = "asymptotic") #   exact   asymptotic    approximate
coin::wilcox_test( HADS得分 ~ group,data=df, distribution = "approximate")
```

SPSS 用较小秩和减去对应 n(n+1)/2

R有时用较小秩和减去对应 n(n+1)/2，有时用较大秩和减去对应 n(n+1)/2

```{r}
wilcox.test(HADS得分 ~ group,data=df,exact = F,correct = F)

# SPSS_曼惠特尼U
g2rankSum-120*121/2


# R中W
g1rankSum-120*121/2
```

![](images/clipboard-4012880571.png)

n1\>20

### Wilcoxon Distribution

```{r}

tibble(
    x = 0:100,
    y =dwilcox(x,m = 7,n = 9)
) %>% 
    ggplot() +
    geom_col(aes(x,y),fill="lightblue",color="black")+
    ggtitle("Wilcoxon Distribution")
```

## 多样本

### 独立 Kruskal-Wallis 检验

用于比较三个或更多独立样本的中位数是否相等。

假设：

1.  随机，独立

2.  每个样本至少5个观测

3.  能够计算秩次

```{r}
kruskal.test(weight~group,data = PlantGrowth)
```

#### 事后多重比较

```{r}
pairwise.wilcox.test(PlantGrowth$weight,PlantGrowth$group,p.adjust.method = "fdr",exact=F)
```

### 相关 Friedman 检验

用于比较三个或更多相关样本的中位数是否相等。

```{r}
# 假设有三个相关样本 x, y, z
x <- c(14, 17, 20, 23, 25)
y <- c(15, 18, 21, 24, 26)
z <- c(16, 19, 22, 25, 27)

# 将样本合并成一个数据框，并指定组别和受试者
data <- data.frame(
  value = c(x, y, z),
  group = factor(rep(c("x", "y", "z"), each = 5)),
  subject = factor(rep(1:5, 3))
)

# 使用 friedman.test() 函数进行检验
result <- friedman.test(value ~ group | subject, data = data)

# 输出检验结果
print(result)

```

## Kendall's Tau 检验

用途：用于检验两个变量之间的相关性。

```{r}
# 假设有两个变量 x 和 y
x <- c(14, 17, 20, 23, 25)
y <- c(15, 18, 21, 24, 26)

# 使用 cor.test() 函数进行 Kendall's Tau 检验
result <- cor.test(x, y, method = "kendall")

# 输出检验结果
print(result)

```

## Spearman's Rank Correlation 检验

用途：用于检验两个变量之间的相关性，适用于数据非线性关系。

```{r}
# 假设有两个变量 x 和 y
x <- c(14, 17, 20, 23, 25)
y <- c(15, 18, 21, 24, 26)

# 使用 cor.test() 函数进行 Spearman's Rank Correlation 检验
result <- cor.test(x, y, method = "spearman")

# 输出检验结果
print(result)

```
