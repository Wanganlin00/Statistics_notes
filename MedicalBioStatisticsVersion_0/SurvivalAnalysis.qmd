# 生存分析

[医学研究中的生存数据建模](https://bookdown.org/wangzhen/survival/)

## 生存函数

$$
S(t)=P(T>t)=1-F(t)=\int_{t}^{+\infty}f(x)dx
$$

其中S(t)是累计生存概率或生存率，量化了生存时间大于t的概率。f(x)是密度函数，呈右偏态分布，反映了任意时间点 t 终点事件的瞬时发生率。F(t)=P(T\<t)是f(t)在区间\[0,t\]的累计形式，也称为分布函数或累积函数。

## 乘积极限法(Kaplan-Meier)

product limit method 也称为Kaplan-Meier 法。

$t_1<t_2<t_3<...<t_n$，样本量大小n，t~i~ 代表个体i发生终点事件或右删失的时间。由于一些个体有相同的生存时间，它们被称为 tied 观测时间，生存时间的个数小于样本量n。

### 点估计S(t)

$n_1>n_2>n_3>...>n_n$ ,n~i~ d代表在时间点t~i~ 暴露于特定事件风险的幸存者数量。

$d_i$ 代表在时间点t~i~ 发生终点事件的数量。（如果没有 tie，d~i~=1或0）

生存率的KM方法估计公式：

$$
\hat S(t)=\prod_{t_i\le t}\frac{n_i-d_i}{n_i}
$$ {#eq-KM}

@eq-KM 包括了删失情况，如果从t~i-1~ 到t~i~ 发生了删失，但没有终点事件，d~i~ =0，条件概率等于1。

### 区间估计S(t)

(1-α)×100% CI $[\hat S(t)-z_{1-\alpha/2}\sqrt{Var\left [\hat S(t)  \right]},\hat S(t)+z_{1-\alpha/2}\sqrt{Var\left [\hat S(t)  \right]}]$

其中$Var\left [\hat S(t)  \right]=\hat S(t)^2\sum_{t_i\le t}\frac{d_i}{n_i(n_i-d_i)}$ (Greenwood method )

### 示例

<https://biostatsquid.com/easy-survival-analysis-r-tutorial/>

```{r}
library(survminer)
library(survival)
library(ggsurvfit)
df <- read_csv("data/log-rank-survival.csv")


surv_obj <- with(df, Surv(Days,status))

surv_fit1 <-survfit(surv_obj ~1,data=df)
# t_i  =  surv_fit1$time
# n_i = surv_fit1$n.risk

# d_i = surv_fit1$n.event

# cnesored
surv_fit1$n.censor

# 生存率survival
surv_fit1$surv

summary(surv_fit1)

ggsurvfit(surv_fit1, linewidth =1)+
    add_confidence_interval()+
    scale_ggsurvfit()+
    add_risktable() +
    labs(x = "Days")
```

```{r}
# 估计 x-天 的生存率

summary( surv_fit1, times = c(0,30,50))$surv

# 中位生存率 median
surv_fit1
```

## 单因素生存曲线的比较

| 检验方法         | 权重          |
|------------------|---------------|
| log-rank test    | 1             |
| Wilcoxon test    | n~j~          |
| Tarone-Ware test | $\sqrt{n_j}$  |
| Peto test        | $\hat S(t_j)$ |

$$
\chi^2=\frac{\left(\sum_jw(t_j)(m_{ij}-e_{ij})\right)^2}{\hat {Var}\left(\sum_jw(t_j)(m_{ij}-e_{ij})\right)}
$$

## log-rank test

1.  H~0~ :两总体的生存曲线是相同的。

2.  计算当第j次发生终点事件各组终点事件的期望值（e~1j~ ,e~2j~ ）

    $e_{1j}=\left ( \frac{n_{1j}}{n_{1j}+n_{2j}}\right)\times (m_{1j}+m_{2j})$

    $e_{2j}=\left ( \frac{n_{2j}}{n_{1j}+n_{2j}}\right)\times (m_{1j}+m_{2j})$

    其中m~ij~ 表示在第 j 个时间点第 i 组终点事件的数量，n~ij~ 表示在第 j 个时间点第 i 组初始观测的数量

3.  对所有时间点对终点事件的观测值和期望值的差异求和

    $O_i-Ei=\sum_j(m_{ij}-e_{ij})\ \ \ (i=1,2)$

    计算其方差估计值

    $\hat{Var}=\sum_j\frac{n_{1j}n_{2j}(m_{1j}+m_{2j})(n_{1j}+n_{2j}-m_{1j}-m_{2j})}{(n_{1j}+n_{2j})^2(n_{1j}+n_{2j}-1)}\ \ \ (i=1,2)$

4.  计算log-rank test 的检验统计量

    $$
    \chi^2=\frac{(O_1-E_1)^2}{\hat{Var}(O_1-E_1)} \ 或者 \ \chi^2=\frac{(O_2-E_2)^2}{\hat{Var}(O_2-E_2)} 
    $$

    也可以近似估计为

    $$
    \chi^2=\sum_{i=1}^2\frac{(O_i-E_i)^2}{E_i} \sim \chi^2(\nu=1)
    $$

```{r}

surv_fit2<-survfit(surv_obj ~ treatment,data=df)
ggsurvplot(surv_fit2, linewidth =1,
          data = df,
          censor.shape = "|", censor.size = 4,
          pval = T,conf.int = T,risk.table = T,risk.table.col = "strata",
          legend.labs = c("CON","DPVB","LDRT","LR-DPVB"),
          risk.table.height = .25,
          ggtheme = theme_bw()
            )+
    labs(x = "Days")


```

```{r}
# 执行Log-rank检验
logrank_test <- survdiff( Surv(Days,status) ~ treatment,data = df)
logrank_test
logrank_test$chisq
logrank_test$pvalue
```

```{r}
survdiff( Surv(Days,status) ~ treatment,
          data = df %>% filter(treatment %in% c("CON", "DPVB")))

survdiff( Surv(Days,status) ~ treatment,
          data = df %>% filter(treatment %in% c("CON", "LDRT")))

survdiff( Surv(Days,status) ~ treatment,
          data = df %>% filter(treatment %in% c("CON", "LR_DPVB")))
```
